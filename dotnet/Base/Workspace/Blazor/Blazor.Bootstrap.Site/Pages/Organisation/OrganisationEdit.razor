@page "/organisation/edit/{id}"
@using Result = Allors.Workspace.Data.Result
@using Task = System.Threading.Tasks.Task
@using Allors.Workspace.Meta
@using Person = Allors.Workspace.Domain.Person
@using Organisation = Allors.Workspace.Domain.Organisation
@attribute [Authorize]
@inject IWorkspace Workspace
@inject NavigationManager NavigationManager

@if (organisation != null)
{
    <BootstrapForm Model="@organisation" OnValidSubmit="@HandleValidSubmit" TValue="Organisation">
        <ValidationSummary />

        <BSRow>
            <BootstrapStringInputRole RoleType="@M.Organisation.Name" />
        </BSRow>
@*
        <BSRow>
            <ABSSelect RoleType="@M.Organisation.Owner" Options="@people" Required="true" DisplayOption="@(v => ((Person) v).FullName)" />
        </BSRow>*@

        <BSRow>
            <BSInputGroup>
                <BSButton type="submit">Submit</BSButton>
            </BSInputGroup>
        </BSRow>
    </BootstrapForm>
}

@code {
    ISession Session;

    M M => this.Session.Workspace.Services.Get<M>();

    [Parameter]
    public string id { get; set; }

    Organisation organisation;

    Person[] people;

    protected override async Task OnInitializedAsync()
    {
        Session = this.Workspace.CreateSession();

        var pull = new[]
        {
            new Pull
            {
                ObjectId = long.Parse(id),
                Results = new[]
                {
                    new Result
                    {
                        Include = M.Organisation.Nodes(v=>v.Owner.Node())
                    }
                }
            },
            new Pull
            {
                Extent = new Filter(M.Person),
            }
    };

        var result = await Session.PullAsync(pull);

        organisation = result.GetObject<Organisation>();
        people = result.GetCollection<Person>();
    }

    public async Task HandleValidSubmit()
    {
        var response = await Session.PushAsync();
        if (!response.HasErrors)
        {
            NavigationManager.NavigateTo("/organisation/list");
        }
    }

}
