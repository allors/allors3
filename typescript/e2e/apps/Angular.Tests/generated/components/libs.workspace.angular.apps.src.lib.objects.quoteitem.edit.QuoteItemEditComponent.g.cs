// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace libs.workspace.angular.apps.src.lib.objects.quoteitem.edit
{
    using OpenQA.Selenium;
    using Components;

    public partial class QuoteItemEditComponent : Components.EntryComponent
    {
        public QuoteItemEditComponent(IWebDriver driver, Allors.Database.Meta.MetaPopulation m) : base(driver, m)
        {
        }

        public Components.MatStatic<QuoteItemEditComponent> QuoteItemState => this.MatStatic(this.M.QuoteItem.QuoteItemState, "QuoteItemEditComponent");


        public Components.MatSelect<QuoteItemEditComponent> QuoteItemInvoiceItemType_1 => this.MatSelect(this.M.QuoteItem.InvoiceItemType, "QuoteItemEditComponent");


        public Components.MatSelect<QuoteItemEditComponent> QuoteItemInvoiceItemType_2 => this.MatSelect(this.M.QuoteItem.InvoiceItemType, "QuoteItemEditComponent");


        public Components.MatInput<QuoteItemEditComponent> PriceableAssignedUnitPrice_1 => this.MatInput(this.M.Priceable.AssignedUnitPrice, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> UnitVat_1 => this.MatStatic(this.M.Priceable.UnitVat, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> TotalIncVat_1 => this.MatStatic(this.M.Priceable.TotalIncVat, "QuoteItemEditComponent");


        public Components.MatAutocomplete<QuoteItemEditComponent> Product => this.MatAutocomplete(this.M.QuoteItem.Product, "QuoteItemEditComponent");


        public Components.MatSelect<QuoteItemEditComponent> SerialisedItem => this.MatSelect(this.M.QuoteItem.SerialisedItem, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> ExpectedSalesPrice => this.MatStatic(this.M.SerialisedItem.ExpectedSalesPrice, "QuoteItemEditComponent");


        public Components.MatInput<QuoteItemEditComponent> Quantity => this.MatInput(this.M.QuoteItem.Quantity, "QuoteItemEditComponent");


        public Components.MatSelect<QuoteItemEditComponent> UnitOfMeasure => this.MatSelect(this.M.QuoteItem.UnitOfMeasure, "QuoteItemEditComponent");


        public Components.MatInput<QuoteItemEditComponent> PriceableAssignedUnitPrice_2 => this.MatInput(this.M.Priceable.AssignedUnitPrice, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> MaximumAllowedPrice => this.MatStatic(this.M.RequestItem.MaximumAllowedPrice, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> UnitVat_2 => this.MatStatic(this.M.Priceable.UnitVat, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> TotalIncVat_2 => this.MatStatic(this.M.Priceable.TotalIncVat, "QuoteItemEditComponent");


        public Components.MatSelect<QuoteItemEditComponent> DerivedVatRegime => this.MatSelect(this.M.Priceable.DerivedVatRegime, "QuoteItemEditComponent");


        public Components.MatSelect<QuoteItemEditComponent> DerivedIrpfRegime => this.MatSelect(this.M.QuoteItem.DerivedIrpfRegime, "QuoteItemEditComponent");


        public Components.MatDatepicker<QuoteItemEditComponent> RequiredByDate => this.MatDatepicker(this.M.QuoteItem.RequiredByDate, "QuoteItemEditComponent");


        public Components.MatDatepicker<QuoteItemEditComponent> EstimatedDeliveryDate => this.MatDatepicker(this.M.QuoteItem.EstimatedDeliveryDate, "QuoteItemEditComponent");


        public Components.MatTextarea<QuoteItemEditComponent> Details => this.MatTextarea(this.M.QuoteItem.Details, "QuoteItemEditComponent");


        public Components.MatTextarea<QuoteItemEditComponent> Comment => this.MatTextarea(this.M.Commentable.Comment, "QuoteItemEditComponent");


        public Components.MatTextarea<QuoteItemEditComponent> InternalComment => this.MatTextarea(this.M.QuoteItem.InternalComment, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> CommentStatic => this.MatStatic(this.M.Commentable.Comment, "QuoteItemEditComponent");


        public Components.MatStatic<QuoteItemEditComponent> InternalCommentStatic => this.MatStatic(this.M.RequestItem.InternalComment, "QuoteItemEditComponent");


        public Components.Button CANCEL => new Components.Button(this.Driver, this.M, "InnerText", @"CANCEL", "QuoteItemEditComponent");


        public Components.Button SAVE => new Components.Button(this.Driver, this.M, "InnerText", @"SAVE", "QuoteItemEditComponent");

    }
}