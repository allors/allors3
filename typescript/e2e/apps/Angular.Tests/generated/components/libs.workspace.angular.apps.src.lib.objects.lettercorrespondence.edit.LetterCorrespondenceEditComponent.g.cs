// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace libs.workspace.angular.apps.src.lib.objects.lettercorrespondence.edit
{
    using OpenQA.Selenium;
    using Components;

    public partial class LetterCorrespondenceEditComponent : Components.EntryComponent
    {
        public LetterCorrespondenceEditComponent(IWebDriver driver, Allors.Database.Meta.MetaPopulation m) : base(driver, m)
        {
        }

        public Components.MatSelect<LetterCorrespondenceEditComponent> CommunicationEventState => this.MatSelect(this.M.CommunicationEvent.CommunicationEventState, "LetterCorrespondenceEditComponent");


        public Components.MatSelect<LetterCorrespondenceEditComponent> EventPurposes => this.MatSelect(this.M.CommunicationEvent.EventPurposes, "LetterCorrespondenceEditComponent");


        public Components.MatSelect<LetterCorrespondenceEditComponent> FromParty => this.MatSelect(this.M.CommunicationEvent.FromParty, "LetterCorrespondenceEditComponent");


        public Components.Button Addclose_1 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "LetterCorrespondenceEditComponent");







        public Components.MatSelect<LetterCorrespondenceEditComponent> ToParty => this.MatSelect(this.M.CommunicationEvent.ToParty, "LetterCorrespondenceEditComponent");


        public Components.Button Addclose_2 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "LetterCorrespondenceEditComponent");







        public Components.MatSelect<LetterCorrespondenceEditComponent> FromPostalAddress => this.MatSelect(this.M.LetterCorrespondence.PostalAddress, "LetterCorrespondenceEditComponent");


        public Components.Button Addclose_3 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "LetterCorrespondenceEditComponent");







        public Components.MatSelect<LetterCorrespondenceEditComponent> ToPostalAddress => this.MatSelect(this.M.LetterCorrespondence.PostalAddress, "LetterCorrespondenceEditComponent");


        public Components.Button Addclose_4 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "LetterCorrespondenceEditComponent");







        public Components.MatInput<LetterCorrespondenceEditComponent> Subject => this.MatInput(this.M.CommunicationEvent.Subject, "LetterCorrespondenceEditComponent");


        public Components.MatStatic<LetterCorrespondenceEditComponent> PostalAddressStatic => this.MatStatic(this.M.LetterCorrespondence.PostalAddress, "LetterCorrespondenceEditComponent");


        public Components.MatDatetimepicker<LetterCorrespondenceEditComponent> ScheduledStart => this.MatDatetimepicker(this.M.CommunicationEvent.ScheduledStart, "LetterCorrespondenceEditComponent");


        public Components.MatDatetimepicker<LetterCorrespondenceEditComponent> ScheduledEnd => this.MatDatetimepicker(this.M.CommunicationEvent.ScheduledEnd, "LetterCorrespondenceEditComponent");


        public Components.MatDatetimepicker<LetterCorrespondenceEditComponent> ActualStart => this.MatDatetimepicker(this.M.CommunicationEvent.ActualStart, "LetterCorrespondenceEditComponent");


        public Components.MatDatetimepicker<LetterCorrespondenceEditComponent> ActualEnd => this.MatDatetimepicker(this.M.CommunicationEvent.ActualEnd, "LetterCorrespondenceEditComponent");


        public Components.MatTextarea<LetterCorrespondenceEditComponent> Comment => this.MatTextarea(this.M.Commentable.Comment, "LetterCorrespondenceEditComponent");


        public Components.Button CANCEL => new Components.Button(this.Driver, this.M, "InnerText", @"CANCEL", "LetterCorrespondenceEditComponent");


        public Components.Button SAVE => new Components.Button(this.Driver, this.M, "InnerText", @"SAVE", "LetterCorrespondenceEditComponent");

    }
}