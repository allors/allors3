// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace libs.workspace.angular.apps.src.lib.objects.timeentry.edit
{
    using OpenQA.Selenium;
    using Components;

    public partial class TimeEntryEditComponent : Components.EntryComponent
    {
        public TimeEntryEditComponent(IWebDriver driver, Allors.Database.Meta.MetaPopulation m) : base(driver, m)
        {
        }

        public Components.MatSelect<TimeEntryEditComponent> RateType => this.MatSelect(this.M.TimeEntry.RateType, "TimeEntryEditComponent");


        public Components.MatDatetimepicker<TimeEntryEditComponent> FromDate => this.MatDatetimepicker(this.M.Period.FromDate, "TimeEntryEditComponent");


        public Components.MatDatetimepicker<TimeEntryEditComponent> ThroughDate => this.MatDatetimepicker(this.M.Period.ThroughDate, "TimeEntryEditComponent");


        public Components.MatSlidetoggle<TimeEntryEditComponent> IsBillable => this.MatSlidetoggle(this.M.ServiceEntry.IsBillable, "TimeEntryEditComponent");


        public Components.MatStatic<TimeEntryEditComponent> AmountOfTime => this.MatStatic(this.M.TimeEntry.AmountOfTime, "TimeEntryEditComponent");


        public Components.MatInput<TimeEntryEditComponent> AssignedAmountOfTime => this.MatInput(this.M.TimeEntry.AssignedAmountOfTime, "TimeEntryEditComponent");


        public Components.MatInput<TimeEntryEditComponent> BillableAmountOfTime => this.MatInput(this.M.TimeEntry.BillableAmountOfTime, "TimeEntryEditComponent");


        public Components.MatSelect<TimeEntryEditComponent> TimeFrequency => this.MatSelect(this.M.TimeEntry.TimeFrequency, "TimeEntryEditComponent");


        public Components.MatInput<TimeEntryEditComponent> AssignedBillingRate => this.MatInput(this.M.TimeEntry.AssignedBillingRate, "TimeEntryEditComponent");


        public Components.MatStatic<TimeEntryEditComponent> BillingFrequency => this.MatStatic(this.M.TimeEntry.BillingFrequency, "TimeEntryEditComponent");


        public Components.MatInput<TimeEntryEditComponent> Description => this.MatInput(this.M.ServiceEntry.Description, "TimeEntryEditComponent");


        public Components.MatTextarea<TimeEntryEditComponent> Comment => this.MatTextarea(this.M.Commentable.Comment, "TimeEntryEditComponent");


        public Components.Button SAVECLOSE => new Components.Button(this.Driver, this.M, "InnerText", @"SAVE & CLOSE", "TimeEntryEditComponent");


        public Components.Button SAVE => new Components.Button(this.Driver, this.M, "InnerText", @"SAVE", "TimeEntryEditComponent");


        public Components.Button CANCEL => new Components.Button(this.Driver, this.M, "InnerText", @"CANCEL", "TimeEntryEditComponent");

    }
}