// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace libs.workspace.angular.apps.src.lib.objects.productquote.create
{
    using OpenQA.Selenium;
    using Components;

    public partial class ProductQuoteCreateComponent : Components.EntryComponent
    {
        public ProductQuoteCreateComponent(IWebDriver driver, Allors.Database.Meta.MetaPopulation m) : base(driver, m)
        {
        }

        public Components.MatAutocomplete<ProductQuoteCreateComponent> Receiver => this.MatAutocomplete(this.M.Quote.Receiver, "ProductQuoteCreateComponent");


        public Components.Button Addclose_1 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "ProductQuoteCreateComponent");







        public Components.MatSelect<ProductQuoteCreateComponent> FullfillContactMechanism => this.MatSelect(this.M.Quote.FullfillContactMechanism, "ProductQuoteCreateComponent");


        public Components.Button Addclose_2 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "ProductQuoteCreateComponent");







        public Components.MatSelect<ProductQuoteCreateComponent> ContactPerson => this.MatSelect(this.M.Quote.ContactPerson, "ProductQuoteCreateComponent");


        public Components.Button Addclose_3 => new Components.Button(this.Driver, this.M, "InnerText", @"add
              close", "ProductQuoteCreateComponent");







        public Components.MatDatepicker<ProductQuoteCreateComponent> ValidFromDate => this.MatDatepicker(this.M.Quote.ValidFromDate, "ProductQuoteCreateComponent");


        public Components.MatDatepicker<ProductQuoteCreateComponent> ValidThroughDate => this.MatDatepicker(this.M.Quote.ValidThroughDate, "ProductQuoteCreateComponent");


        public Components.MatDatepicker<ProductQuoteCreateComponent> IssueDate => this.MatDatepicker(this.M.Quote.IssueDate, "ProductQuoteCreateComponent");


        public Components.MatDatepicker<ProductQuoteCreateComponent> RequiredResponseDate => this.MatDatepicker(this.M.Quote.RequiredResponseDate, "ProductQuoteCreateComponent");


        public Components.MatSelect<ProductQuoteCreateComponent> DerivedCurrency => this.MatSelect(this.M.Quote.DerivedCurrency, "ProductQuoteCreateComponent");


        public Components.MatSelect<ProductQuoteCreateComponent> QuoteDerivedVatRegime_1 => this.MatSelect(this.M.Quote.DerivedVatRegime, "ProductQuoteCreateComponent");


        public Components.MatSelect<ProductQuoteCreateComponent> QuoteDerivedVatRegime_2 => this.MatSelect(this.M.Quote.DerivedVatRegime, "ProductQuoteCreateComponent");


        public Components.MatSelect<ProductQuoteCreateComponent> DerivedIrpfRegime => this.MatSelect(this.M.Quote.DerivedIrpfRegime, "ProductQuoteCreateComponent");


        public Components.MatTextarea<ProductQuoteCreateComponent> Description => this.MatTextarea(this.M.Quote.Description, "ProductQuoteCreateComponent");


        public Components.MatStatic<ProductQuoteCreateComponent> CommentStatic => this.MatStatic(this.M.Commentable.Comment, "ProductQuoteCreateComponent");


        public Components.MatTextarea<ProductQuoteCreateComponent> Comment => this.MatTextarea(this.M.Commentable.Comment, "ProductQuoteCreateComponent");


        public Components.MatStatic<ProductQuoteCreateComponent> InternalCommentStatic => this.MatStatic(this.M.Request.InternalComment, "ProductQuoteCreateComponent");


        public Components.MatTextarea<ProductQuoteCreateComponent> InternalComment => this.MatTextarea(this.M.Quote.InternalComment, "ProductQuoteCreateComponent");


        public Components.Button CANCEL => new Components.Button(this.Driver, this.M, "InnerText", @"CANCEL", "ProductQuoteCreateComponent");


        public Components.Button SAVE => new Components.Button(this.Driver, this.M, "InnerText", @"SAVE", "ProductQuoteCreateComponent");

    }
}