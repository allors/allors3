// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { IObject, Method } from '@allors/workspace/domain/system';

import { C1 } from './C1.g';
import { Permission } from './Permission.g';
import { I1 } from './I1.g';
import { I12 } from './I12.g';
import { I2 } from './I2.g';
import { S1 } from './S1.g';

export interface C2 extends IObject, I2 {

    CanReadC2AllorsDecimal: boolean;
    CanWriteC2AllorsDecimal: boolean;
    C2AllorsDecimal: string | null;

    CanReadC2C1One2One: boolean;
    CanWriteC2C1One2One: boolean;
    C2C1One2One: C1 | null;

    CanReadC2C2Many2One: boolean;
    CanWriteC2C2Many2One: boolean;
    C2C2Many2One: C2 | null;

    CanReadC2AllorsUnique: boolean;
    CanWriteC2AllorsUnique: boolean;
    C2AllorsUnique: string | null;

    CanReadC2I12Many2One: boolean;
    CanWriteC2I12Many2One: boolean;
    C2I12Many2One: I12 | null;

    CanReadC2I12One2One: boolean;
    CanWriteC2I12One2One: boolean;
    C2I12One2One: I12 | null;

    CanReadC2I1Many2Manies: boolean;
    CanWriteC2I1Many2Manies: boolean;
    C2I1Many2Manies: I1[];
    AddC2I1Many2Many(value: I1) : void;
    RemoveC2I1Many2Many(value: I1) : void;

    CanReadC2AllorsDouble: boolean;
    CanWriteC2AllorsDouble: boolean;
    C2AllorsDouble: number | null;

    CanReadC2I1One2Manies: boolean;
    CanWriteC2I1One2Manies: boolean;
    C2I1One2Manies: I1[];
    AddC2I1One2Many(value: I1) : void;
    RemoveC2I1One2Many(value: I1) : void;

    CanReadC2I2One2One: boolean;
    CanWriteC2I2One2One: boolean;
    C2I2One2One: I2 | null;

    CanReadC2AllorsInteger: boolean;
    CanWriteC2AllorsInteger: boolean;
    C2AllorsInteger: number | null;

    CanReadC2I2Many2Manies: boolean;
    CanWriteC2I2Many2Manies: boolean;
    C2I2Many2Manies: I2[];
    AddC2I2Many2Many(value: I2) : void;
    RemoveC2I2Many2Many(value: I2) : void;

    CanReadC2I12Many2Manies: boolean;
    CanWriteC2I12Many2Manies: boolean;
    C2I12Many2Manies: I12[];
    AddC2I12Many2Many(value: I12) : void;
    RemoveC2I12Many2Many(value: I12) : void;

    CanReadC2C2One2Manies: boolean;
    CanWriteC2C2One2Manies: boolean;
    C2C2One2Manies: C2[];
    AddC2C2One2Many(value: C2) : void;
    RemoveC2C2One2Many(value: C2) : void;

    CanReadC2AllorsBoolean: boolean;
    CanWriteC2AllorsBoolean: boolean;
    C2AllorsBoolean: boolean | null;

    CanReadC2I1Many2One: boolean;
    CanWriteC2I1Many2One: boolean;
    C2I1Many2One: I1 | null;

    CanReadC2I1One2One: boolean;
    CanWriteC2I1One2One: boolean;
    C2I1One2One: I1 | null;

    CanReadC2C1Many2Manies: boolean;
    CanWriteC2C1Many2Manies: boolean;
    C2C1Many2Manies: C1[];
    AddC2C1Many2Many(value: C1) : void;
    RemoveC2C1Many2Many(value: C1) : void;

    CanReadC2I12One2Manies: boolean;
    CanWriteC2I12One2Manies: boolean;
    C2I12One2Manies: I12[];
    AddC2I12One2Many(value: I12) : void;
    RemoveC2I12One2Many(value: I12) : void;

    CanReadC2I2One2Manies: boolean;
    CanWriteC2I2One2Manies: boolean;
    C2I2One2Manies: I2[];
    AddC2I2One2Many(value: I2) : void;
    RemoveC2I2One2Many(value: I2) : void;

    CanReadC2C2One2One: boolean;
    CanWriteC2C2One2One: boolean;
    C2C2One2One: C2 | null;

    CanReadC2AllorsString: boolean;
    CanWriteC2AllorsString: boolean;
    C2AllorsString: string | null;

    CanReadC2C1Many2One: boolean;
    CanWriteC2C1Many2One: boolean;
    C2C1Many2One: C1 | null;

    CanReadC2C2Many2Manies: boolean;
    CanWriteC2C2Many2Manies: boolean;
    C2C2Many2Manies: C2[];
    AddC2C2Many2Many(value: C2) : void;
    RemoveC2C2Many2Many(value: C2) : void;

    CanReadC2AllorsDateTime: boolean;
    CanWriteC2AllorsDateTime: boolean;
    C2AllorsDateTime: string | null;

    CanReadC2I2Many2One: boolean;
    CanWriteC2I2Many2One: boolean;
    C2I2Many2One: I2 | null;

    CanReadC2C1One2Manies: boolean;
    CanWriteC2C1One2Manies: boolean;
    C2C1One2Manies: C1[];
    AddC2C1One2Many(value: C1) : void;
    RemoveC2C1One2Many(value: C1) : void;

    CanReadC2AllorsBinary: boolean;
    CanWriteC2AllorsBinary: boolean;
    C2AllorsBinary: any | null;

    CanReadS1One2One: boolean;
    CanWriteS1One2One: boolean;
    S1One2One: S1 | null;



    C1sWhereC1C2Many2Many : C1[];


    C1sWhereC1C2Many2One : C1[];


    C1WhereC1C2One2Many : C1 | null;


    C1WhereC1C2One2One : C1 | null;


    C2sWhereC2C2Many2One : C2[];


    C2WhereC2C2One2Many : C2 | null;


    C2WhereC2C2One2One : C2 | null;


    C2sWhereC2C2Many2Many : C2[];


    I1WhereI1C2One2Many : I1 | null;


    I1sWhereI1C2Many2Many : I1[];


    I1WhereI1C2One2One : I1 | null;


    I1sWhereI1C2Many2One : I1[];


    I12WhereI12C2One2One : I12 | null;


    I12sWhereI12C2Many2Many : I12[];


    I12sWhereI12C2Many2One : I12[];


    I2sWhereI2C2Many2Many : I2[];


    I2sWhereI2C2Many2One : I2[];


    I2WhereI2C2One2Many : I2 | null;


    I2WhereI2C2One2One : I2 | null;


}