// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { IObject, Method } from '@allors/workspace/domain/system';

import { C1 } from './C1.g';
import { C2 } from './C2.g';
import { Permission } from './Permission.g';
import { I1 } from './I1.g';
import { I12 } from './I12.g';

export interface I2 extends IObject, I12 {

    CanReadI2I2Many2One: boolean;
    CanWriteI2I2Many2One: boolean;
    I2I2Many2One: I2 | null;

    CanReadI2C1Many2One: boolean;
    CanWriteI2C1Many2One: boolean;
    I2C1Many2One: C1 | null;

    CanReadI2I12Many2One: boolean;
    CanWriteI2I12Many2One: boolean;
    I2I12Many2One: I12 | null;

    CanReadI2AllorsBoolean: boolean;
    CanWriteI2AllorsBoolean: boolean;
    I2AllorsBoolean: boolean | null;

    CanReadI2C1One2Manies: boolean;
    CanWriteI2C1One2Manies: boolean;
    I2C1One2Manies: C1[];
    AddI2C1One2Many(value: C1) : void;
    RemoveI2C1One2Many(value: C1) : void;

    CanReadI2C1One2One: boolean;
    CanWriteI2C1One2One: boolean;
    I2C1One2One: C1 | null;

    CanReadI2AllorsDecimal: boolean;
    CanWriteI2AllorsDecimal: boolean;
    I2AllorsDecimal: string | null;

    CanReadI2I2Many2Manies: boolean;
    CanWriteI2I2Many2Manies: boolean;
    I2I2Many2Manies: I2[];
    AddI2I2Many2Many(value: I2) : void;
    RemoveI2I2Many2Many(value: I2) : void;

    CanReadI2AllorsBinary: boolean;
    CanWriteI2AllorsBinary: boolean;
    I2AllorsBinary: any | null;

    CanReadI2AllorsUnique: boolean;
    CanWriteI2AllorsUnique: boolean;
    I2AllorsUnique: string | null;

    CanReadI2I1Many2One: boolean;
    CanWriteI2I1Many2One: boolean;
    I2I1Many2One: I1 | null;

    CanReadI2AllorsDateTime: boolean;
    CanWriteI2AllorsDateTime: boolean;
    I2AllorsDateTime: string | null;

    CanReadI2I12One2Manies: boolean;
    CanWriteI2I12One2Manies: boolean;
    I2I12One2Manies: I12[];
    AddI2I12One2Many(value: I12) : void;
    RemoveI2I12One2Many(value: I12) : void;

    CanReadI2I12One2One: boolean;
    CanWriteI2I12One2One: boolean;
    I2I12One2One: I12 | null;

    CanReadI2C2Many2Manies: boolean;
    CanWriteI2C2Many2Manies: boolean;
    I2C2Many2Manies: C2[];
    AddI2C2Many2Many(value: C2) : void;
    RemoveI2C2Many2Many(value: C2) : void;

    CanReadI2I1Many2Manies: boolean;
    CanWriteI2I1Many2Manies: boolean;
    I2I1Many2Manies: I1[];
    AddI2I1Many2Many(value: I1) : void;
    RemoveI2I1Many2Many(value: I1) : void;

    CanReadI2C2Many2One: boolean;
    CanWriteI2C2Many2One: boolean;
    I2C2Many2One: C2 | null;

    CanReadI2AllorsString: boolean;
    CanWriteI2AllorsString: boolean;
    I2AllorsString: string | null;

    CanReadI2C2One2Manies: boolean;
    CanWriteI2C2One2Manies: boolean;
    I2C2One2Manies: C2[];
    AddI2C2One2Many(value: C2) : void;
    RemoveI2C2One2Many(value: C2) : void;

    CanReadI2I1One2One: boolean;
    CanWriteI2I1One2One: boolean;
    I2I1One2One: I1 | null;

    CanReadI2I1One2Manies: boolean;
    CanWriteI2I1One2Manies: boolean;
    I2I1One2Manies: I1[];
    AddI2I1One2Many(value: I1) : void;
    RemoveI2I1One2Many(value: I1) : void;

    CanReadI2I12Many2Manies: boolean;
    CanWriteI2I12Many2Manies: boolean;
    I2I12Many2Manies: I12[];
    AddI2I12Many2Many(value: I12) : void;
    RemoveI2I12Many2Many(value: I12) : void;

    CanReadI2I2One2One: boolean;
    CanWriteI2I2One2One: boolean;
    I2I2One2One: I2 | null;

    CanReadI2AllorsInteger: boolean;
    CanWriteI2AllorsInteger: boolean;
    I2AllorsInteger: number | null;

    CanReadI2I2One2Manies: boolean;
    CanWriteI2I2One2Manies: boolean;
    I2I2One2Manies: I2[];
    AddI2I2One2Many(value: I2) : void;
    RemoveI2I2One2Many(value: I2) : void;

    CanReadI2C1Many2Manies: boolean;
    CanWriteI2C1Many2Manies: boolean;
    I2C1Many2Manies: C1[];
    AddI2C1Many2Many(value: C1) : void;
    RemoveI2C1Many2Many(value: C1) : void;

    CanReadI2C2One2One: boolean;
    CanWriteI2C2One2One: boolean;
    I2C2One2One: C2 | null;

    CanReadI2AllorsDouble: boolean;
    CanWriteI2AllorsDouble: boolean;
    I2AllorsDouble: number | null;



    C1sWhereC1I2Many2Many : C1[];


    C1sWhereC1I2Many2One : C1[];


    C1WhereC1I2One2Many : C1 | null;


    C1WhereC1I2One2One : C1 | null;


    C2WhereC2I2One2One : C2 | null;


    C2sWhereC2I2Many2Many : C2[];


    C2WhereC2I2One2Many : C2 | null;


    C2sWhereC2I2Many2One : C2[];


    I1sWhereI1I2Many2Many : I1[];


    I1sWhereI1I2Many2One : I1[];


    I1WhereI1I2One2Many : I1 | null;


    I1WhereI1I2One2One : I1 | null;


    I12sWhereI12I2Many2Many : I12[];


    I12sWhereI12I2Many2One : I12[];


    I12WhereI12I2One2One : I12 | null;


    I12WhereI12I2One2Many : I12 | null;


    I2sWhereI2I2Many2One : I2[];


    I2sWhereI2I2Many2Many : I2[];


    I2WhereI2I2One2One : I2 | null;


    I2WhereI2I2One2Many : I2 | null;


}