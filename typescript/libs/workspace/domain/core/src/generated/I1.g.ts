// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { IObject, Method } from '@allors/workspace/domain/system';

import { C1 } from './C1.g';
import { C2 } from './C2.g';
import { Permission } from './Permission.g';
import { I12 } from './I12.g';
import { I2 } from './I2.g';
import { S1 } from './S1.g';

export interface I1 extends IObject, I12, S1 {

    CanReadI1I1Many2One: boolean;
    CanWriteI1I1Many2One: boolean;
    I1I1Many2One: I1 | null;

    CanReadI1I12Many2Manies: boolean;
    CanWriteI1I12Many2Manies: boolean;
    I1I12Many2Manies: I12[];
    AddI1I12Many2Many(value: I12) : void;
    RemoveI1I12Many2Many(value: I12) : void;

    CanReadI1I2Many2Manies: boolean;
    CanWriteI1I2Many2Manies: boolean;
    I1I2Many2Manies: I2[];
    AddI1I2Many2Many(value: I2) : void;
    RemoveI1I2Many2Many(value: I2) : void;

    CanReadI1I2Many2One: boolean;
    CanWriteI1I2Many2One: boolean;
    I1I2Many2One: I2 | null;

    CanReadI1AllorsString: boolean;
    CanWriteI1AllorsString: boolean;
    I1AllorsString: string | null;

    CanReadI1I12Many2One: boolean;
    CanWriteI1I12Many2One: boolean;
    I1I12Many2One: I12 | null;

    CanReadI1AllorsDateTime: boolean;
    CanWriteI1AllorsDateTime: boolean;
    I1AllorsDateTime: string | null;

    CanReadI1I2One2Manies: boolean;
    CanWriteI1I2One2Manies: boolean;
    I1I2One2Manies: I2[];
    AddI1I2One2Many(value: I2) : void;
    RemoveI1I2One2Many(value: I2) : void;

    CanReadI1C2One2Manies: boolean;
    CanWriteI1C2One2Manies: boolean;
    I1C2One2Manies: C2[];
    AddI1C2One2Many(value: C2) : void;
    RemoveI1C2One2Many(value: C2) : void;

    CanReadI1C1One2One: boolean;
    CanWriteI1C1One2One: boolean;
    I1C1One2One: C1 | null;

    CanReadI1AllorsInteger: boolean;
    CanWriteI1AllorsInteger: boolean;
    I1AllorsInteger: number | null;

    CanReadI1C2Many2Manies: boolean;
    CanWriteI1C2Many2Manies: boolean;
    I1C2Many2Manies: C2[];
    AddI1C2Many2Many(value: C2) : void;
    RemoveI1C2Many2Many(value: C2) : void;

    CanReadI1I1One2Manies: boolean;
    CanWriteI1I1One2Manies: boolean;
    I1I1One2Manies: I1[];
    AddI1I1One2Many(value: I1) : void;
    RemoveI1I1One2Many(value: I1) : void;

    CanReadI1I1Many2Manies: boolean;
    CanWriteI1I1Many2Manies: boolean;
    I1I1Many2Manies: I1[];
    AddI1I1Many2Many(value: I1) : void;
    RemoveI1I1Many2Many(value: I1) : void;

    CanReadI1AllorsBoolean: boolean;
    CanWriteI1AllorsBoolean: boolean;
    I1AllorsBoolean: boolean | null;

    CanReadI1AllorsDecimal: boolean;
    CanWriteI1AllorsDecimal: boolean;
    I1AllorsDecimal: string | null;

    CanReadI1I12One2One: boolean;
    CanWriteI1I12One2One: boolean;
    I1I12One2One: I12 | null;

    CanReadI1I2One2One: boolean;
    CanWriteI1I2One2One: boolean;
    I1I2One2One: I2 | null;

    CanReadI1C2One2One: boolean;
    CanWriteI1C2One2One: boolean;
    I1C2One2One: C2 | null;

    CanReadI1C1One2Manies: boolean;
    CanWriteI1C1One2Manies: boolean;
    I1C1One2Manies: C1[];
    AddI1C1One2Many(value: C1) : void;
    RemoveI1C1One2Many(value: C1) : void;

    CanReadI1AllorsBinary: boolean;
    CanWriteI1AllorsBinary: boolean;
    I1AllorsBinary: any | null;

    CanReadI1C1Many2Manies: boolean;
    CanWriteI1C1Many2Manies: boolean;
    I1C1Many2Manies: C1[];
    AddI1C1Many2Many(value: C1) : void;
    RemoveI1C1Many2Many(value: C1) : void;

    CanReadI1AllorsDouble: boolean;
    CanWriteI1AllorsDouble: boolean;
    I1AllorsDouble: number | null;

    CanReadI1I1One2One: boolean;
    CanWriteI1I1One2One: boolean;
    I1I1One2One: I1 | null;

    CanReadI1C1Many2One: boolean;
    CanWriteI1C1Many2One: boolean;
    I1C1Many2One: C1 | null;

    CanReadI1I12One2Manies: boolean;
    CanWriteI1I12One2Manies: boolean;
    I1I12One2Manies: I12[];
    AddI1I12One2Many(value: I12) : void;
    RemoveI1I12One2Many(value: I12) : void;

    CanReadI1C2Many2One: boolean;
    CanWriteI1C2Many2One: boolean;
    I1C2Many2One: C2 | null;

    CanReadI1AllorsUnique: boolean;
    CanWriteI1AllorsUnique: boolean;
    I1AllorsUnique: string | null;



    C1sWhereC1I1Many2Many : C1[];


    C1sWhereC1I1Many2One : C1[];


    C1WhereC1I1One2Many : C1 | null;


    C1WhereC1I1One2One : C1 | null;


    C2sWhereC2I1Many2Many : C2[];


    C2WhereC2I1One2Many : C2 | null;


    C2sWhereC2I1Many2One : C2[];


    C2WhereC2I1One2One : C2 | null;


    I1sWhereI1I1Many2One : I1[];


    I1WhereI1I1One2Many : I1 | null;


    I1sWhereI1I1Many2Many : I1[];


    I1WhereI1I1One2One : I1 | null;


    I12sWhereI12I1Many2One : I12[];


    I12sWhereI12I1Many2Many : I12[];


    I12WhereI12I1One2Many : I12 | null;


    I12WhereI12I1One2One : I12 | null;


    I2sWhereI2I1Many2One : I2[];


    I2sWhereI2I1Many2Many : I2[];


    I2WhereI2I1One2One : I2 | null;


    I2WhereI2I1One2Many : I2 | null;


}