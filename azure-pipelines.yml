trigger:
- master
- feature/*
- issue/*

stages:
- stage: System
  jobs:
  - job: Test
    timeoutInMinutes: 240

    pool:
      vmImage: 'windows-2019'

    strategy:
      matrix:
        adapters_memory:
          target: 'CiDotnetSystemAdaptersTestMemory'
        adapters_sqlclient:
          target: 'CiDotnetSystemAdaptersTestSqlClient'
        adapters_npgsql:
          target: 'CiDotnetSystemAdaptersTestNpgsql'
        system_workspace:
          target: 'CiDotnetSystemWorkspaceTest'
        core_database:
          target: 'CiDotnetCoreDatabaseTest'
        core_workspace_local:
          target: 'CiDotnetCoreWorkspaceLocalTest'
        core_workspace_remote_json_systemtext:
          target: 'CiDotnetCoreWorkspaceRemoteJsonSystemTextTest'
        core_workspace_remote_json_restsharp:
          target: 'CiDotnetCoreWorkspaceRemoteJsonRestSharpTest'
        base_database:
          target: 'CiDotnetBaseDatabaseTest'
        apps_database:
          target: 'CiDotnetAppsDatabaseTest'
        typescript_workspace:
          target: 'CiTypescriptWorkspaceTest'
        typescript_workspace_adapters_json:
          target: 'CiTypescriptWorkspaceAdaptersJsonTest'
        typescript_workspace_base_e2e:
          target: 'CiTypescriptWorkspaceBaseE2ETest'
        typescript_workspace_apps_e2e:
          target: 'CiTypescriptWorkspaceAppsE2ETest'
        demos:
          target: 'CiDemosTest'

    steps:
    - powershell: Set-Culture -CultureInfo nl-BE
      displayName: CultureInfo nl-BE
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1 sdk'
      inputs:
        packageType: sdk
        version: 3.1.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: UseDotNet@2
      displayName: 'Use .NET Core 5.0 sdk'
      inputs:
        packageType: sdk
        version: 5.0.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: PowerShell@2
      env:
        NODE_OPTIONS: --max_old_space_size=16384
      inputs:
        targetType: 'filePath'
        filePath: 'build.ps1'
        arguments: -target $(target)
        failOnStderr: true
      displayName: Running $(target)
    - task: PublishTestResults@2
      condition: always()
      inputs:
        testRunTitle: $(target)
        testResultsFormat: 'VSTest'
        testResultsFiles: '*.trx'
        searchFolder: 'artifacts/tests'
      displayName: 'Results for $(target)'
