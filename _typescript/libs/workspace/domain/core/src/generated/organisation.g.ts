// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { IObject, Method } from '@allors/workspace/domain/system';

import { Data } from './Data.g';
import { Person } from './Person.g';
import { Deletable } from './Deletable.g';
import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { Permission } from './Permission.g';

export interface Organisation extends IObject, Deletable, UniquelyIdentifiable {

    CanReadEmployees: boolean;
    CanWriteEmployees: boolean;
    Employees: Person[];
    AddEmployee(value: Person) : void;
    RemoveEmployee(value: Person) : void;

    CanReadManager: boolean;
    CanWriteManager: boolean;
    Manager: Person | null;

    CanReadOwner: boolean;
    CanWriteOwner: boolean;
    Owner: Person | null;

    CanReadShareholders: boolean;
    CanWriteShareholders: boolean;
    Shareholders: Person[];
    AddShareholder(value: Person) : void;
    RemoveShareholder(value: Person) : void;

    CanReadName: boolean;
    CanWriteName: boolean;
    Name: string | null;

    CanReadCycleOne: boolean;
    CanWriteCycleOne: boolean;
    CycleOne: Person | null;

    CanReadCycleMany: boolean;
    CanWriteCycleMany: boolean;
    CycleMany: Person[];
    AddCycleMany(value: Person) : void;
    RemoveCycleMany(value: Person) : void;

    CanReadOneData: boolean;
    CanWriteOneData: boolean;
    OneData: Data | null;

    CanReadManyDatas: boolean;
    CanWriteManyDatas: boolean;
    ManyDatas: Data[];
    AddManyData(value: Data) : void;
    RemoveManyData(value: Data) : void;

    CanReadJustDidIt: boolean;
    CanWriteJustDidIt: boolean;
    JustDidIt: boolean | null;

    CanReadJustDidItDerived: boolean;
    JustDidItDerived: boolean | null;



    PeopleWhereCycleOne : Person[];


    PeopleWhereCycleMany : Person[];


    CanExecuteJustDoIt: boolean;
    JustDoIt: Method;

    CanExecuteToggleCanWrite: boolean;
    ToggleCanWrite: Method;

    CanExecuteDelete: boolean;
    Delete: Method;

}